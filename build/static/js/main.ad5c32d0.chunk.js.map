{"version":3,"sources":["assets/logo.svg","components/Header.js","components/Footer.js","components/AppLayout.js","api.js","constants.js","components/MovieList.js","App.js","index.js"],"names":["Header","Container","Row","Col","src","Logo","width","alt","className","Footer","useState","favColor","setFavColor","inputRef","useRef","fluid","style","background","textAlign","onClick","current","click","color","ref","type","value","onChange","e","target","display","AppLayout","children","paddingBottom","position","left","bottom","maxHeight","CancelToken","axios","source","httpProtocol","window","location","protocol","getMovieList","title","a","cancel","get","split","cancelToken","token","result","isCancel","MovieList","searchValue","setSearchValue","loading","setLoading","movies","setMovies","playlist","setPlaylist","currentMovie","setCurrentMovie","confirmMovie","setConfirmMovie","handleClose","useEffect","removeFromPlaylist","movieId","newPlaylist","InputGroup","size","Text","id","FormControl","aria-label","aria-describedby","name","placeholder","then","data","catch","err","Error","Spinner","animation","role","Search","length","CardGroup","map","movieDetails","Card","Img","variant","Poster","Title","Body","Year","imdbID","Button","Modal","show","onHide","closeButton","Object","keys","playlistMovieDetail","Image","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad5c32d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Logo from '../assets/logo.svg';\n\nexport default function Header() {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <img src={Logo} width=\"40px\" alt=\"OMDb movie\" />\n          <h3 className=\"text-center\">OMDB Movie</h3>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport color from 'hex-to-color-name';\n\nfunction Footer() {\n  const [favColor, setFavColor] = useState('#000000');\n  const changeColor = (e) => setFavColor(e.target.value);\n  const inputRef = useRef(null);\n  return (\n    <Container fluid>\n      <Row style={{ background: favColor }}>\n        <Col>\n          <p style={{ textAlign: 'center' }}>\n            <span\n              style={{ background: 'white' }}\n              onClick={() => inputRef.current.click()}\n            >\n              Your favorite color is {color(favColor)}\n            </span>\n            <input\n              ref={inputRef}\n              type=\"color\"\n              value={favColor}\n              onChange={changeColor}\n              style={{ display: 'none' }}\n            />\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\n\nexport default function AppLayout({ children }) {\n  return (\n    <>\n      <header>\n        <Header />\n      </header>\n      <section\n        style={{\n          paddingBottom: '80px',\n        }}\n      >\n        {children}\n      </section>\n      <footer\n        style={{\n          position: 'fixed',\n          left: 0,\n          bottom: 0,\n          width: '100%',\n          maxHeight: '80px',\n        }}\n      >\n        <Footer />\n      </footer>\n    </>\n  );\n}\n","import axios from 'axios';\nimport { OMDB_API_KEY } from './constants';\n\nconst CancelToken = axios.CancelToken;\nlet source = null;\nconst httpProtocol = window?.location?.protocol ?? 'http:';\nexport const getMovieList = async (title) => {\n  if (source) {\n    source.cancel('Operation canceled by the user.');\n  }\n  try {\n    source = CancelToken.source();\n    const result = await axios.get(\n      `${\n        httpProtocol.split(':')[0]\n      }://www.omdbapi.com/?s=${title}&&type=movie&apikey=${OMDB_API_KEY}`,\n      { cancelToken: source.token }\n    );\n    source = null;\n    return result;\n  } catch (err) {\n    if (axios.isCancel(err)) {\n      // console.log('api call cancelled');\n    } else {\n      // console.log('api call threw some other error');\n      source = null;\n    }\n    throw err;\n  }\n};\n","export const OMDB_API_KEY = '1cd8680c';\n","import React, { useEffect, useState } from 'react';\nimport { isCancel } from 'axios';\nimport { getMovieList } from '../api';\nimport {\n  Card,\n  Button,\n  CardGroup,\n  Image,\n  Container,\n  Modal,\n  InputGroup,\n  FormControl,\n  Spinner,\n} from 'react-bootstrap';\n\nfunction MovieList() {\n  const [searchValue, setSearchValue] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState({});\n  const [playlist, setPlaylist] = useState({});\n  const [currentMovie, setCurrentMovie] = useState({});\n  const [confirmMovie, setConfirmMovie] = useState(false);\n\n  const handleClose = () => {\n    setConfirmMovie(false);\n    setCurrentMovie({});\n  };\n  const handleShow = () => setConfirmMovie(true);\n\n  const handleChange = (e) => {\n    setSearchValue(e.target.value);\n    if (e.target.value) {\n      setLoading(true);\n      getMovieList(e.target.value)\n        .then((movies) => {\n          setMovies(movies?.data ?? {});\n          setLoading(false);\n        })\n        .catch((err) => {\n          // console.log(err, 'error');\n          if (!isCancel(err)) {\n            setLoading(false);\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (!searchValue) {\n      setMovies({});\n      setLoading(false);\n    }\n  }, [searchValue]);\n\n  const addToPlaylist = () => {\n    setPlaylist((playlist) => ({\n      ...playlist,\n      [currentMovie.imdbID]: currentMovie,\n    }));\n    setCurrentMovie({});\n    setConfirmMovie(false);\n  };\n  const removeFromPlaylist = (movieId) => {\n    setPlaylist((playlist) => {\n      const { ...newPlaylist } = playlist;\n      delete newPlaylist[movieId];\n      return newPlaylist;\n    });\n  };\n  return (\n    <Container>\n      <div className=\"\">\n        Welcome to OMDb Review.\n        <br />\n        Search for your favourite movies and save it to playlist.\n      </div>\n      <InputGroup size=\"lg\">\n        <InputGroup.Text id=\"inputGroup-sizing-lg\">Search</InputGroup.Text>\n        <FormControl\n          aria-label=\"Large\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n          type=\"text\"\n          value={searchValue}\n          name=\"search\"\n          placeholder=\"Search Movie by Title\"\n          onChange={handleChange}\n        />\n      </InputGroup>\n      <div id=\"snackbar\" className={movies?.Error ? 'show' : ''}>\n        {movies?.Error}\n      </div>\n      {loading ? (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      ) : null}\n      {movies?.Search?.length && (\n        <CardGroup>\n          {movies.Search.map((movieDetails) => (\n            <Card key={movieDetails.imdbID} className=\"mb-2\">\n              <Card.Img\n                variant=\"top\"\n                fluid\n                src={movieDetails?.Poster}\n                alt={movieDetails?.Title ?? 'poster'}\n              />\n              <Card.Body>\n                <Card.Title>{movieDetails?.Title}</Card.Title>\n                <Card.Text>Release Year: {movieDetails?.Year}</Card.Text>\n                {playlist[movieDetails.imdbID] ? (\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => removeFromPlaylist(movieDetails.imdbID)}\n                  >\n                    Already Added\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                      setCurrentMovie(movieDetails);\n                      handleShow();\n                    }}\n                  >\n                    Add to Playlist\n                  </Button>\n                )}\n              </Card.Body>\n            </Card>\n          ))}\n        </CardGroup>\n      )}\n      <Modal show={confirmMovie} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add {currentMovie.Title} to Playlist?</Modal.Title>\n        </Modal.Header>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            No\n          </Button>\n          <Button variant=\"primary\" onClick={addToPlaylist}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {!!Object.keys(playlist).length && (\n        <CardGroup>\n          <Card>\n            <Card.Header>Your Playlist:</Card.Header>\n          </Card>\n          {Object.keys(playlist).map((movieId) => {\n            const playlistMovieDetail = playlist[movieId];\n            return (\n              <Card key={`playlist-item-${movieId}`}>\n                <Image\n                  fluid\n                  src={playlistMovieDetail.Poster}\n                  alt={playlistMovieDetail.Title}\n                />\n                <Card.Body>\n                  <Card.Title>{playlistMovieDetail.Title}</Card.Title>\n                  <Card.Text>\n                    Release Year: {playlistMovieDetail.Year}\n                  </Card.Text>\n\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => removeFromPlaylist(movieId)}\n                  >Remove From Playlist</Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardGroup>\n      )}\n    </Container>\n  );\n}\n\nexport default MovieList;\n","import AppLayout from './components/AppLayout';\nimport MovieList from './components/MovieList';\n\nfunction App() {\n  return (\n    <AppLayout>\n      <MovieList />\n    </AppLayout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}